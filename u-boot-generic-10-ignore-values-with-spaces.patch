From 465de866c2ca7283b2682d916bb001cbdffe9f8c Mon Sep 17 00:00:00 2001
From: Ondrej Kubik <ondrej.kubik@canonical.com>
Date: Tue, 16 Jan 2018 15:41:55 +0000
Subject: [PATCH 1/1] Ignore env variables with values containing spaces

Signed-off-by: Ondrej Kubik <ondrej.kubik@canonical.com>

White spaces

Signed-off-by: Ondrej Kubik <ondrej.kubik@canonical.com>
---
 cmd/nvedit.c        |  2 +-
 common/env_common.c |  6 +++---
 include/search.h    |  2 +-
 lib/hashtable.c     | 18 +++++++++++++++++-
 4 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/cmd/nvedit.c b/cmd/nvedit.c
index 9ca5cb5..d5a0a4e 100644
--- a/cmd/nvedit.c
+++ b/cmd/nvedit.c
@@ -1080,7 +1080,7 @@ static int do_env_import(cmd_tbl_t *cmdtp, int flag,
 	}
 
 	if (himport_r(&env_htab, ptr, size, sep, del ? 0 : H_NOCLEAR,
-			crlf_is_lf, 0, NULL) == 0) {
+			crlf_is_lf, 0, NULL, 0) == 0) {
 		error("Environment import failed: errno = %d\n", errno);
 		return 1;
 	}
diff --git a/common/env_common.c b/common/env_common.c
index 4655ede..904117a 100644
--- a/common/env_common.c
+++ b/common/env_common.c
@@ -119,7 +119,7 @@ void set_default_env(const char *s)
 
 	if (himport_r(&env_htab, (char *)default_environment,
 			sizeof(default_environment), '\0', flags, 0,
-			0, NULL) == 0)
+			0, NULL, 0) == 0)
 		error("Environment import failed: errno = %d\n", errno);
 
 	gd->flags |= GD_FLG_ENV_READY;
@@ -136,7 +136,7 @@ int set_default_vars(int nvars, char * const vars[])
 	 */
 	return himport_r(&env_htab, (const char *)default_environment,
 				sizeof(default_environment), '\0',
-				H_NOCLEAR | H_INTERACTIVE, 0, nvars, vars);
+				H_NOCLEAR | H_INTERACTIVE, 0, nvars, vars, 0);
 }
 
 #ifdef CONFIG_ENV_AES
@@ -219,7 +219,7 @@ int env_import(const char *buf, int check)
 
 	puts("Overlaying environment\n");
 	if (himport_r(&env_htab, (char *)ep->data, ENV_SIZE, '\0', H_NOCLEAR | H_INTERACTIVE, 0,
-			nvars, vars)) {
+			nvars, vars, 1)) {
 		gd->flags |= GD_FLG_ENV_READY;
 		return 1;
 	}
diff --git a/include/search.h b/include/search.h
index 402dfd8..c1d1e00 100644
--- a/include/search.h
+++ b/include/search.h
@@ -101,7 +101,7 @@ extern ssize_t hexport_r(struct hsearch_data *__htab,
 extern int himport_r(struct hsearch_data *__htab,
 		     const char *__env, size_t __size, const char __sep,
 		     int __flag, int __crlf_is_lf, int nvars,
-		     char * const vars[]);
+		     char * const vars[], int validate);
 
 /* Walk the whole table calling the callback on each element */
 extern int hwalk_r(struct hsearch_data *__htab, int (*callback)(ENTRY *));
diff --git a/lib/hashtable.c b/lib/hashtable.c
index f088477..80c7d62 100644
--- a/lib/hashtable.c
+++ b/lib/hashtable.c
@@ -776,7 +776,7 @@ static int drop_var_from_set(const char *name, int nvars, char * vars[])
 
 int himport_r(struct hsearch_data *htab,
 		const char *env, size_t size, const char sep, int flag,
-		int crlf_is_lf, int nvars, char * const vars[])
+		int crlf_is_lf, int nvars, char * const vars[], int validate)
 {
 	char *data, *sp, *dp, *name, *value;
 	char *localvars[nvars];
@@ -917,6 +917,22 @@ int himport_r(struct hsearch_data *htab,
 		if (!drop_var_from_set(name, nvars, localvars))
 			continue;
 
+		char *p = value;
+		int valid = 1;
+		if ( validate ) {
+			while (*p++) {
+				if (*p == ' ' && *(p+1) != '\0') {
+					puts("!!! space found in value, ignoring env, env [");
+			                puts(name); puts("], value:[");
+			                puts(value); puts("]\n\n");
+					valid = 0;
+					continue;
+				}
+			}
+		}
+		if (valid == 0 ) {
+			continue;
+		}
 		/* enter into hash table */
 		e.key = name;
 		e.data = value;
-- 
2.7.4

